{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/pages/theming/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Theming"},{"depth":2,"value":"MantineProvider"},{"depth":2,"value":"Theme object"},{"depth":2,"value":"Default theme"},{"depth":2,"value":"Extending theme"},{"depth":3,"value":"Colors"},{"depth":3,"value":"Add or replace colors"},{"depth":3,"value":"Primary color"},{"depth":3,"value":"Fonts and text styles"},{"depth":3,"value":"Spacing, radius and shadows"},{"depth":3,"value":"Nested MantineProviders"},{"depth":3,"value":"Overriding theme on component level"},{"depth":2,"value":"Dark theme"},{"depth":2,"value":"Use mantine theme with react-jss"},{"depth":3,"value":"use-mantine-theme hook"},{"depth":3,"value":"Theming context"},{"depth":3,"value":"Theme as function value"},{"depth":3,"value":"Utility functions"},{"depth":4,"value":"getFocusStyles"},{"depth":4,"value":"getFontStyles"},{"depth":2,"value":"TypeScript"}],"frontmatter":{"title":"Theming","package":null,"slug":"/pages/theming/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Theming\",\n  \"slug\": \"/pages/theming/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"theming\"\n  }, \"Theming\"), mdx(\"p\", null, \"By default all Mantine components use the default theme.\\nYou can extend and customize theme on top level with MantineProvider\\nor on individual component level with theme override.\"), mdx(\"h2\", {\n    \"id\": \"mantineprovider\"\n  }, \"MantineProvider\"), mdx(\"p\", null, \"MantineProvider component allows you to change theme globally.\\nIt is not required if you decide to stick with default theme:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { MantineProvider, Button } from '@mantine/core';\\n\\nfunction App() {\\n  return <Button>My app button</Button>;\\n}\\n\\n// Custom theme is applied to all components in App\\nfunction WithProvider() {\\n  return (\\n    <MantineProvider theme={{ fontFamily: 'Open Sans' }}>\\n      <App />\\n    </MantineProvider>\\n  );\\n}\\n\\n// Default theme is used in all components in App\\nfunction NoProvider() {\\n  return <App />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"theme-object\"\n  }, \"Theme object\"), mdx(\"p\", null, \"Mantine theme is an object where your application's colors, fonts, spacing, border-radius and other design elements are defined.\"), mdx(\"p\", null, \"Theme shape:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"interface MantineTheme {\\n  colorScheme: 'light' | 'dark';\\n  white: string;\\n  black: string;\\n  colors: Record<string, Tuple<string, 10>>;\\n  fontFamily: CSSProperties['fontFamily'];\\n  lineHeight: CSSProperties['lineHeight'];\\n  transitionTimingFunction: CSSProperties['transitionTimingFunction'];\\n  fontFamilyMonospace: CSSProperties['fontFamily'];\\n  primaryColor: string;\\n\\n  fontSizes: Record<'xs' | 'sm' | 'md' | 'lg' | 'xl', number>;\\n  radius: Record<'xs' | 'sm' | 'md' | 'lg' | 'xl', number>;\\n  spacing: Record<'xs' | 'sm' | 'md' | 'lg' | 'xl', number>;\\n  shadows: Record<'xs' | 'sm' | 'md' | 'lg' | 'xl', string>;\\n\\n  headings: {\\n    fontFamily: CSSProperties['fontFamily'];\\n    fontWeight: CSSProperties['fontWeight'];\\n    sizes: {\\n      h1: { fontSize: CSSProperties['fontSize']; lineHeight: CSSProperties['lineHeight'] };\\n      h2: { fontSize: CSSProperties['fontSize']; lineHeight: CSSProperties['lineHeight'] };\\n      h3: { fontSize: CSSProperties['fontSize']; lineHeight: CSSProperties['lineHeight'] };\\n      h4: { fontSize: CSSProperties['fontSize']; lineHeight: CSSProperties['lineHeight'] };\\n      h5: { fontSize: CSSProperties['fontSize']; lineHeight: CSSProperties['lineHeight'] };\\n      h6: { fontSize: CSSProperties['fontSize']; lineHeight: CSSProperties['lineHeight'] };\\n    };\\n  };\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"default-theme\"\n  }, \"Default theme\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { DEFAULT_THEME } from '@mantine/core';\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mantinedev/mantine/blob/master/src/mantine-theme/src/default-theme.ts\"\n  }, \"View full default theme source on Github\")), mdx(\"p\", null, \"You can use default theme object in tests or storybook for simplicity.\\nDo not use DEFAULT_THEME for styling as it is not connected to MantineProvider.\"), mdx(\"h2\", {\n    \"id\": \"extending-theme\"\n  }, \"Extending theme\"), mdx(\"p\", null, \"You can change theme for all components.\\nTo do so wrap your application with MantineProvider component.\\nTheme is deeply merged, every property that is not specified will be taken from default theme.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { MantineProvider } from '@mantine/core';\\n\\nfunction YourApp() {\\n  return (\\n    <MantineProvider\\n      theme={{\\n        fontFamily: 'Open Sans, sans-serif',\\n        lineHeight: 1.2,\\n        primaryColor: 'indigo',\\n      }}\\n    >\\n      <App />\\n    </MantineProvider>\\n  );\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"colors\"\n  }, \"Colors\"), mdx(\"p\", null, \"Mantine uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://yeun.github.io/open-color/\"\n  }, \"open-color\"), \" in default theme with some additions.\\nEach color has 10 shades.\"), mdx(\"p\", null, \"Colors are exposed on theme object as an array of strings,\\nyou can access color shade by color name and index (0-9), colors with larger index are darker:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"theme.colors.red[5];\\ntheme.colors.gray[9];\\ntheme.colors.blue[0];\\n\")), mdx(ThemeColors, {\n    mdxType: \"ThemeColors\"\n  }), mdx(\"h3\", {\n    \"id\": \"add-or-replace-colors\"\n  }, \"Add or replace colors\"), mdx(\"p\", null, \"You can add any amount of extra colors by extending theme.colors with MantineProvider.\\nThis will allow you to use these colors with all components which support color change,\\nfor example, \", mdx(GatsbyLink, {\n    to: \"/core/button/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Button\"), \", \", mdx(GatsbyLink, {\n    to: \"/core/badge/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Badge\"), \" or \", mdx(GatsbyLink, {\n    to: \"/core/switch/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Switch\"), \".\"), mdx(\"p\", null, \"Note that all colors that are added should \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always include 10 shades\"), \".\\nYou can use some of these tools to generate or copy ready color palettes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://themera.vercel.app/\"\n  }, \"Themera\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.materialui.co/colors\"\n  }, \"Material Design Colors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://omatsuri.app/color-shades-generator\"\n  }, \"Omatsuri\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://smart-swatch.netlify.app/\"\n  }, \"Smart Swatch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://palx.jxnblk.com/\"\n  }, \"Palx\"))), mdx(ThemeColorExtendDemo, {\n    mdxType: \"ThemeColorExtendDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"primary-color\"\n  }, \"Primary color\"), mdx(\"p\", null, \"Default primary color is blue, you can change it to any color defined in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.colors\"), \".\\nPrimary color is used:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in some components to determine color value if component didn't receive color prop;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"to define focus styles for all interactive elements.\")), mdx(\"p\", null, \"For example, \", mdx(GatsbyLink, {\n    to: \"/core/button/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Button\"), \" Component\\nby default will use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"theme.primaryColor\"), \" (press any key on keyboard to see focus ring):\"), mdx(PrimaryColorDemo, {\n    mdxType: \"PrimaryColorDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"fonts-and-text-styles\"\n  }, \"Fonts and text styles\"), mdx(\"p\", null, \"By default Mantine uses system fonts. It brings fast and familiar experience to users.\\nYou can change fonts and other text styles for headings, code and all other components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.fontFamilyMonospace\"), \" \\u2013 controls components with monospace font-family, for example, \", mdx(GatsbyLink, {\n    to: \"/core/code/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Code\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/kbd/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Kbd\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.fontFamily\"), \" \\u2013 controls font-family in all other cases\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.lineHeight\"), \" \\u2013 controls line-height property in all components except headings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.fontSizes\"), \" \\u2013 controls font-size in all components except headings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.headings\"), \" \\u2013 controls font-family, line-heigh and font-size of h1-h6 tags in \", mdx(GatsbyLink, {\n    to: \"/core/title/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Title\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/typography-styles-provider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"TypographyStylesProvider\"), \" components\")), mdx(ThemeFontsExtendDemo, {\n    mdxType: \"ThemeFontsExtendDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"spacing-radius-and-shadows\"\n  }, \"Spacing, radius and shadows\"), mdx(\"p\", null, \"By default Mantine supports 5 sizes for spacing, radius and shadows: xs, sm, md, lg, xl.\\nThese values are exposed on theme:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.spacing\"), \" \\u2013 general spacing values used for paddings and margins, for example, to set padding on \", mdx(GatsbyLink, {\n    to: \"/core/paper/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Paper\"), \" or \", mdx(GatsbyLink, {\n    to: \"/core/container/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Container\"), \" components or to calculate margins in \", mdx(GatsbyLink, {\n    to: \"/core/typography-styles-provider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"TypographyStylesProvider\"), \" component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.shadows\"), \" \\u2013 box-shadow values \\u2013 used with components which extend \", mdx(GatsbyLink, {\n    to: \"/core/paper/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Paper\"), \": \", mdx(GatsbyLink, {\n    to: \"/core/modal/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Modal\"), \", \", mdx(GatsbyLink, {\n    to: \"/core/menu/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Menu\"), \" and others\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.radius\"), \" \\u2013 border-radius values \\u2013 used in all components which support radius: \", mdx(GatsbyLink, {\n    to: \"/core/paper/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Paper\"), \", \", mdx(GatsbyLink, {\n    to: \"/core/button/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Button\"), \", \", mdx(GatsbyLink, {\n    to: \"/core/input/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Input\"), \" and others\")), mdx(\"p\", null, \"Example with \", mdx(GatsbyLink, {\n    to: \"/core/paper/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Paper\"), \" component (padding is set with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.spacing\"), \"):\"), mdx(Demo, {\n    data: PaperDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can change size values by setting corresponding properties.\\nIn this example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"xs and xl values from theme will be overwritten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sm, md and lg values will be used from default theme\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { Button, Code, MantineProvider, Title } from '@mantine/core';\\n\\nfunction YourApp() {\\n  return (\\n    <MantineProvider\\n      theme={{\\n        spacing: {\\n          xs: 2,\\n          xl: 20,\\n        },\\n      }}\\n    >\\n      <Title order={3}>Georgia or serif title</Title>\\n      <Button>Verdana button</Button>\\n      <Code>Courier Code</Code>\\n    </MantineProvider>\\n  );\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"nested-mantineproviders\"\n  }, \"Nested MantineProviders\"), mdx(\"p\", null, \"If some parts of your application require different theme styles\\nyou can wrap them in another MantineProvider.\\nNested MantineProvider components do not inherit theme properties from parents\\nand merge theme prop with default theme.\"), mdx(NestedProvidersDemo, {\n    mdxType: \"NestedProvidersDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"overriding-theme-on-component-level\"\n  }, \"Overriding theme on component level\"), mdx(\"p\", null, \"Each Mantine component that uses theme supports theme override with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"themeOverride\"), \" prop:\"), mdx(ThemeOverrideDemo, {\n    mdxType: \"ThemeOverrideDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"dark-theme\"\n  }, \"Dark theme\"), mdx(\"p\", null, \"Mantine has native support for dark theme. Dark theme is available for all components.\\nYou can view default dark theme for each component by changing color scheme in upper right corner\\nor with keyboard shortcut \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u2318 + J\"), \" on MacOS and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + J\"), \" on other systems.\"), mdx(\"p\", null, \"Read everything about dark theme in \", mdx(GatsbyLink, {\n    to: \"/guides/dark-theme/\",\n    mdxType: \"GatsbyLink\"\n  }, \"dark theme guide\"), \".\"), mdx(\"h2\", {\n    \"id\": \"use-mantine-theme-with-react-jss\"\n  }, \"Use mantine theme with react-jss\"), mdx(\"p\", null, \"All Mantine components are built with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cssinjs.org/react-jss/\"\n  }, \"react-jss\"), \".\\nWe recommend to use react-jss to style the rest of your application\\nas it provides you with the most convenient way to utilize Mantine theme, but it is not required\\n\\u2013 you can use any other styling tools and languages.\"), mdx(\"h3\", {\n    \"id\": \"use-mantine-theme-hook\"\n  }, \"use-mantine-theme hook\"), mdx(\"p\", null, \"Hook returns theme from MantineProvider context or default theme\\nif you did not wrap application with MantineProvider.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useMantineTheme } from '@mantine/core';\\n\\nfunction Component() {\\n  const theme = useMantineTheme();\\n  return <div style={{ background: theme.colors.blue[5] }} />;\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"theming-context\"\n  }, \"Theming context\"), mdx(\"p\", null, \"If your application is wrapped with MantineProvider you can utilize theming context in createUseStyles:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { createUseStyles } from 'react-jss';\\nimport { theming } from '@mantine/core';\\n\\nconst useStyles = createUseStyles(\\n  (theme) => ({\\n    wrapper: {\\n      background: theme.colors.gray[5],\\n    },\\n  }),\\n  { theming }\\n);\\n\\nfunction YourComponent() {\\n  const classes = useStyles();\\n  return <div className={classes.wrapper} />;\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"theme-as-function-value\"\n  }, \"Theme as function value\"), mdx(\"p\", null, \"This way will work in all cases no matter if you use MantineProvider or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { createUseStyles } from 'react-jss';\\nimport { useMantineTheme } from '@mantine/core';\\n\\nconst useStyles = createUseStyles({\\n  wrapper: ({ theme }) => ({\\n    background: theme.colors.gray[5],\\n  }),\\n});\\n\\nfunction YourComponent() {\\n  const classes = useStyles({ theme: useMantineTheme() });\\n  return <div className={classes.wrapper} />;\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"utility-functions\"\n  }, \"Utility functions\"), mdx(\"p\", null, \"@mantine/core package has several utility function that will help you work with Mantine theme in jss.\"), mdx(\"h4\", {\n    \"id\": \"getfocusstyles\"\n  }, \"getFocusStyles\"), mdx(\"p\", null, \"Returns mantine focus styles in jss format for interactive elements.\\nFocus styles are visible only when user navigates with keyboard.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { createUseStyles } from 'react-jss';\\nimport { getFocusStyles, theming } from '@mantine/core';\\n\\ncreateUseStyles(\\n  (theme) => ({\\n    button: {\\n      ...getFocusStyles(theme),\\n      color: 'red',\\n    },\\n  }),\\n  { theming }\\n);\\n\")), mdx(\"h4\", {\n    \"id\": \"getfontstyles\"\n  }, \"getFontStyles\"), mdx(\"p\", null, \"Returns font styles from theme with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth\"\n  }, \"font smoothing\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { createUseStyles } from 'react-jss';\\nimport { getFontStyles, theming } from '@mantine/core';\\n\\ncreateUseStyles(\\n  (theme) => ({\\n    wrapper: {\\n      ...getFontStyles(theme),\\n      color: 'red',\\n    },\\n  }),\\n  { theming }\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"typescript\"\n  }, \"TypeScript\"), mdx(\"p\", null, \"@mantine/core package exports types:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MantineSize\"), \" \\u2013 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"'xs' | 'sm' | 'md' | 'lg' | 'xl'\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MantineNumberSize\"), \" \\u2013 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MantineSize | number\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MantineSizes\"), \" \\u2013 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Record<MantineSize, number>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MantineTheme\"), \" \\u2013 theme object interface\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MantineThemeOverride\"), \" \\u2013 theme override options\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"04dac1fb-f762-5fff-bae6-afd81e7d04fe","slug":"pages/theming","__params":{"slug":"pages"}}},"staticQueryHashes":["1423860837","2548225466","3507612243"]}