{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/menu/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"MenuItem component"},{"depth":2,"value":"Custom control"},{"depth":2,"value":"Change menu position"},{"depth":2,"value":"Change transition"},{"depth":2,"value":"Size and shadow"},{"depth":2,"value":"Custom component as MenuItem"},{"depth":2,"value":"Get element ref"},{"depth":2,"value":"Accessibility and usability"}],"frontmatter":{"title":"Menu","package":"@mantine/core","slug":"/core/menu/","props":["Menu","MenuItem"],"import":"import { Menu, MenuItem } from '@mantine/core';","docs":"core/Menu.mdx","source":"mantine-core/src/components/Menu/Menu.tsx","description":"Combine a list of secondary actions into single interactive area","bundleSize":null,"installation":null,"pageTitle":null,"license":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Menu\",\n  \"order\": 1,\n  \"slug\": \"/core/menu/\",\n  \"category\": \"overlay\",\n  \"description\": \"Combine a list of secondary actions into single interactive area\",\n  \"props\": [\"Menu\", \"MenuItem\"],\n  \"import\": \"import { Menu, MenuItem } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Menu/Menu.tsx\",\n  \"docs\": \"core/Menu.mdx\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Use Menu to combine a list of secondary actions into single interactive area.\"), mdx(Demo, {\n    data: MenuDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"menuitem-component\"\n  }, \"MenuItem component\"), mdx(\"p\", null, \"You can use \", mdx(GatsbyLink, {\n    to: \"/core/divider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Divider\"), \" (renders horizontal line) and MenuItem components inside Menu.\\nMenuItem renders button and accepts props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"icon\"), \" \\u2013 icon on the left\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"children\"), \" \\u2013 item label\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"rightSection\"), \" \\u2013 any element, rendered on the right, for example, \", mdx(GatsbyLink, {\n    to: \"/core/badge/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Badge\"), \" or keyboard shortcut\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"...others\"), \" \\u2013 MenuItem produces button element, all other props will be spread to it, for example, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onClick\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"className\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<MenuItem\\n  icon={<GearIcon />}\\n  onClick={() => console.log('Hello')}\\n  rightSection={\\n    <Text size=\\\"sm\\\" color=\\\"gray\\\">\\n      \\u2318K\\n    </Text>\\n  }\\n>\\n  Label\\n</MenuItem>\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-control\"\n  }, \"Custom control\"), mdx(\"p\", null, \"By default menu button uses \", mdx(GatsbyLink, {\n    to: \"/core/action-icon/\",\n    mdxType: \"GatsbyLink\"\n  }, \"ActionIcon\"), \" with horizontal dots.\\nYou can change it by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"control\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlRefProp\"), \" props:\"), mdx(Demo, {\n    data: MenuDemos.controls,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlRefProp\"), \" is the prop name with which element ref can be accessed.\\nIt defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" as all interactive Mantine components use it to get ref.\\nFor regular html element it will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlRefProp=\\\"ref\\\"\")), mdx(\"h2\", {\n    \"id\": \"change-menu-position\"\n  }, \"Change menu position\"), mdx(\"p\", null, \"Menu position defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ top: 0, left: 0 }\"), \" and is set with object which contains optional top, left, bottom and right properties:\"), mdx(Demo, {\n    data: MenuDemos.positions,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-transition\"\n  }, \"Change transition\"), mdx(\"p\", null, \"Menu is built with \", mdx(GatsbyLink, {\n    to: \"/core/transition/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Transition\"), \" component.\\nYou can customize transition, timing function and duration:\"), mdx(Demo, {\n    data: MenuDemos.transitions,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size-and-shadow\"\n  }, \"Size and shadow\"), mdx(\"p\", null, \"You can use predefined shadows defined in \", mdx(GatsbyLink, {\n    to: \"/pages/theming/#spacing-radius-and-shadows\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme.shadows\"), \" or your own:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu shadow=\\\"sm\\\" /> // -> predefined small shadow\\n<Menu shadow=\\\"1px 1px 3px rgba(0, 0, 0, .1)\\\" /> // -> custom shadow\\n\")), mdx(Demo, {\n    data: MenuDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Menu has predefined sizes: xs, sm, md, lg, xl. Size prop controls menu width.\\nYou can also use number value to set width in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu size=\\\"sm\\\" /> // -> predefined small width\\n<Menu size={200} /> // -> 200px width\\n\")), mdx(\"p\", null, \"You can get predefined menu sizes by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MENU_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { MENU_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Prop value', 'Menu width'],\n    data: Object.keys(MENU_SIZES).map(function (size) {\n      return [size, \"\".concat(MENU_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"custom-component-as-menuitem\"\n  }, \"Custom component as MenuItem\"), mdx(\"p\", null, \"By default menu items render as button, to change that set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop on MenuItem component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Regular anchor as MenuItem root element\\n<MenuItem component=\\\"a\\\" href=\\\"https://mantine/dev\\\" target=\\\"_blank\\\" />\\n\\n// React router link as MenuItem root element\\n<MenuItem component={Link} to=\\\"/hello\\\" />\\n\")), mdx(Demo, {\n    data: MenuDemos.component,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get menu control ref by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop to Menu component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { useRef } from 'react';\\nimport { Menu } from '@mantine/core';\\n\\nfunction Demo() {\\n  const menuControlRef = useRef();\\n  return <Menu elementRef={menuControlRef} />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility-and-usability\"\n  }, \"Accessibility and usability\"), mdx(\"p\", null, \"To make component more accessible for users with screen readers set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"menuButtonLabel\"), \" prop.\\nUse it in case you chose control which does not include text, for example, default ActionIcon with horizontal dots icon.\"), mdx(\"p\", null, \"Component behavior and properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When menu is opened focus is trapped inside\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When menu is closed focus is moved back to menu control\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Focus inside menu is controlled with up and down arrows, tab key has no effect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"By default when menu item is clicked, menu closes, change it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"closeOnItemClick\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu is closed when user clicks outside ot presses escape\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu control has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-haspopup\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-expanded\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-controls\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-label\"), \" attributes, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-label\"), \" is defined by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menuButtonLabel\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu body has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menu\"), \" role, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-orientation\"), \" is always set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertical\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu item has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menuitem\"), \" role\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"af8166dc-3942-5536-80f3-189e7efb85c8","slug":"core/Menu","__params":{"slug":"core"}}},"staticQueryHashes":["1423860837","2548225466","3507612243"]}