{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/card/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Link overlay"},{"depth":2,"value":"Get element ref"}],"frontmatter":{"title":"Card","package":"@mantine/core","slug":"/core/card/","props":["Card"],"import":"import { Card } from '@mantine/core';","docs":"core/Card.mdx","source":"mantine-core/src/components/Card/Card.tsx","description":"Display card with context styles for Image and Divider components","bundleSize":null,"installation":null,"pageTitle":null,"license":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Card\",\n  \"order\": 1,\n  \"slug\": \"/core/card/\",\n  \"category\": \"data-display\",\n  \"description\": \"Display card with context styles for Image and Divider components\",\n  \"props\": [\"Card\"],\n  \"import\": \"import { Card } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Card/Card.tsx\",\n  \"docs\": \"core/Card.mdx\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Card component is a wrapper around \", mdx(GatsbyLink, {\n    to: \"/core/paper/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Paper\"), \" component\\nwith context styles for \", mdx(GatsbyLink, {\n    to: \"/core/image/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Image\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/divider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Divider\"), \"\\ncomponents. Combine Card component with other Mantine components to create product cards:\"), mdx(Demo, {\n    data: CardDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"link-overlay\"\n  }, \"Link overlay\"), mdx(\"p\", null, \"Use \", mdx(GatsbyLink, {\n    to: \"/core/overlay/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Overlay\"), \" component with 0 opacity\\nto create link overlay. Note that, card context styles (negative margins and border-radius) rely on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":fist-child\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":last-child\"), \",\\nif you need preserve them, do not put overlay as first or last element.\"), mdx(Demo, {\n    data: CardDemos.overlay,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get root element ref by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { useRef } from 'react';\\nimport { Card } from '@mantine/core';\\n\\nfunction Demo() {\\n  const ref = useRef();\\n  return <Card elementRef={ref} />;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"74dfe29b-ca8b-5891-953c-dfd7477240b8","slug":"core/Card","__params":{"slug":"core"}}},"staticQueryHashes":["1423860837","2548225466","3507612243"]}