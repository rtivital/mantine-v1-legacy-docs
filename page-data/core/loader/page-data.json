{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/loader/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Size"}],"frontmatter":{"title":"Loader","package":"@mantine/core","slug":"/core/loader/","props":["Loader"],"import":"import { Loader } from '@mantine/core';","docs":"core/Loader.mdx","source":"mantine-core/src/components/Loader/Loader.tsx","description":"Indicate loading state","bundleSize":null,"installation":null,"pageTitle":null,"license":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Loader\",\n  \"order\": 1,\n  \"slug\": \"/core/loader/\",\n  \"category\": \"feedback\",\n  \"description\": \"Indicate loading state\",\n  \"props\": [\"Loader\"],\n  \"import\": \"import { Loader } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Loader/Loader.tsx\",\n  \"docs\": \"core/Loader.mdx\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"By default loader will be rendered with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.primaryColor\"), \".\\nYou can choose any color defined in \", mdx(GatsbyLink, {\n    to: \"/pages/theming/#colors\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme.colors\"), \":\"), mdx(Demo, {\n    data: LoaderDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"Size controls loader height, width is calculated dynamically. Loader has predefined sizes: xs, sm, md, lg, xl.\\nAlternatively you can use number to set height in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Loader size=\\\"sm\\\" /> // -> predefined small size\\n<Loader size={50} /> // -> { height: 50 }\\n\")), mdx(\"p\", null, \"You can get predefined sizes by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LOADER_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { LOADER_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Size', 'Height'],\n    data: Object.keys(LOADER_SIZES).map(function (size) {\n      return [size, \"\".concat(LOADER_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"8bf153a5-381c-5d82-a48f-0133d9c78810","slug":"core/Loader","__params":{"slug":"core"}}},"staticQueryHashes":["1423860837","2548225466","3507612243"]}